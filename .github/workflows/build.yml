name: Build soda-sql

on: [ push ]

jobs:
  test-postgres:
    name: Test Postgres - Python
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [ 3.8 ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Run Tox
        run: |
          cat dev-requirements.in | grep tox | xargs pip install
          tox -- --html=./reports/${{ steps.extract_branch.outputs.branch }}/tests/index.html \
            --cov=sodasql tests --cov-report=html:./reports/${{ steps.extract_branch.outputs.branch }}/coverage
      - name: Copy Reports Index Page
        run: |
          cp ./reports/index.html ./reports/${{ steps.extract_branch.outputs.branch }}/index.html
      - name: Setup aws-cli
        uses: chrislennon/action-aws-cli@v1.1
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Publish Reports
        if: always()
        run: aws s3 sync ./reports s3://sodasql-reports/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_BUILD_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_BUILD_SECRET_ACCESS_KEY }}
      - name: Publish Documentation
        if: success() && contains('main master', steps.extract_branch.outputs.branch)
        run: aws s3 sync ./docs s3://sodasql-docs/
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_BUILD_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_BUILD_SECRET_ACCESS_KEY }}
      - name: Notify Slack on Failure
        if: failure()
        run: |
          pip3 install -r .github/scripts/requirements.txt
          python3 .github/scripts/report_workflow_failure.py
        env:
          JOB_ID: ${{ github.job }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPORTS_URL: http://sodasql-reports.s3-website-eu-west-1.amazonaws.com
      - name: Notify Slack on Success
        if: success()
        run: |
          pip3 install -r .github/scripts/requirements.txt
          .github/scripts/report_workflow_success.py
        env:
          JOB_ID: ${{ github.job }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPORTS_URL: http://sodasql-reports.s3-website-eu-west-1.amazonaws.com
