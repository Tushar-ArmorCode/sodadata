name: Build SodaSQL

on: [ push ]

jobs:
  publish-documentation:
    name: Publish Documentation
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_BUILD_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_BUILD_SECRET_ACCESS_KEY }}
      INCLUDED_BRANCHES: "main master"
    steps:
      - uses: actions/checkout@v2
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Setup aws-cli
        if: contains(env.INCLUDED_BRANCHES, steps.extract_branch.outputs.branch)
        uses: chrislennon/action-aws-cli@v1.1
      - name: Publish Documentation
        if: contains(env.INCLUDED_BRANCHES, steps.extract_branch.outputs.branch)
        run: aws s3 sync ./docs s3://sodasql-docs/

  run-tests:
    name: Run Tests
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: [ 3.7, 3.8 ]
        test-module: [ local, SnowflakeSuite]
    env:
      JOB_ID: ${{ github.job }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPORTS_URL: http://sodasql-reports.s3-website-eu-west-1.amazonaws.com
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_BUILD_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_BUILD_SECRET_ACCESS_KEY }}
      TEST_MODULE: ${{ matrix.test-module }}
      PYTHON_VERSION: ${{ matrix.python-version }}
      INCLUDED_BRANCHES: "main master"
      SODA_SNOWFLAKE_USERNAME: ${{ secrets.SODA_SNOWFLAKE_USERNAME }}
      SODA_SNOWFLAKE_PASSWORD: ${{ secrets.SODA_SNOWFLAKE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Extract Branch Name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Run Tox
        run: |
          cat dev-requirements.in | grep tox | xargs pip install
          tox -- \
            --html=./reports/${{ steps.extract_branch.outputs.branch }}/${{ matrix.python-version }}/${{ matrix.test-module }}/tests/index.html \
            --cov=sodasql tests \
            --cov-report=html:./reports/${{ steps.extract_branch.outputs.branch }}/${{ matrix.python-version }}/${{ matrix.test-module }}/coverage \
            -k ${{ matrix.test-module }}
      - name: Copy Reports Index Page
        if: always()
        run: |
          cp ./reports/index.html ./reports/${{ steps.extract_branch.outputs.branch }}/${{ matrix.python-version }}/${{ matrix.test-module }}/index.html
      - name: Notify on Failure
        if: failure()
        run: |
          pip3 install -r .github/scripts/requirements.txt
          python3 .github/scripts/report_workflow_failure.py
      - name: Setup aws-cli
        if: always()
        uses: chrislennon/action-aws-cli@v1.1
      - name: Publish Reports
        if: always()
        run: aws s3 sync ./reports s3://sodasql-reports/

  notify-success:
    name: Notify on Success
    needs: [ run-tests ]
    runs-on: ubuntu-20.04
    env:
      JOB_ID: ${{ github.job }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      INCLUDED_BRANCHES: "main master"
    steps:
      - uses: actions/checkout@v2
      - name: Notify Slack on Success
        if: success()
        run: |
          pip3 install -r .github/scripts/requirements.txt
          .github/scripts/report_workflow_success.py
